type Query {
  history(page: Int, pageSize: Int, sort: Sort, filter: HistoryFilter): [History]
  settings: Settings
}

type Mutation {
  addRepository(repository: RepositoryInput): Settings
  removeRepository(repository: RepositoryInput): Settings
  updateRepository(old: RepositoryInput, new: RepositoryInput): Settings
}

input HistoryFilter {
  id: StringFilter
  name: StringFilter
  status: NumberFilter
  details: HistoryDetailsFilter
}

input HistoryDetailsFilter {
  step: StringFilter
  output: StringFilter
  status: NumberFilter
}

input NumberFilter {
  eq: Int
  lt: Int
  gt: Int
  in: [Int]
}

input StringFilter {
  eq: String
  contains: String
  in: [String]
}

input Sort {
  field: String
  asc: Boolean
}

type History {
  id: String
  timestamp(format: String): String
  name: String
  status: Int
  details: [HistoryDetails]
}

type HistoryDetails {
  step: String
  output: String
  status: Int
  time: Int
}

type Settings {
  repositories: [Repository]
}

type Repository {
  name: String
  url: String
}

input RepositoryInput {
  name: String
  url: String
}